{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","components/GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifts","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,MAAQT,EAAaU,SAf3B,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,aAmB/BZ,EAAYe,UAAY,CACpBH,MAAOI,IAAUC,KAAKC,Y,mCC5BbC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,mGACsFC,UAAUH,IADhG,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAW,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC9B,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCFCO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECHyB,SAAEA,GAC3B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAACpB,IAEGqB,EDf2BM,CAAc3B,GAAnCa,EAAb,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,mCAAOpB,EAAP,OAEEoB,GAAW,4CAEb,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAA2BA,GAAZA,EAAIC,SAK/B,2BEnBCiB,EAAgB,WAEzB,MAAoC9C,mBAAS,CAAC,kBAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAMA,OACI,qCACI,mDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQgD,EAAWpB,KAAK,SAAAnB,GAAG,OACf,cAAC,EAAD,CAAoBU,SAAUV,GAAfA,YChBvCwC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.bb241aef.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cat => [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={ inputValue } onChange={ handleChange } />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    value: PropTypes.func.isRequired\r\n}","export const getGift = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=12&api_key=EPZo7Ux9T0HJRiNklvxCmy9CHaIAhfdf&q=${ encodeURI(category) }`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GridItem = ({ title, url }) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown' >\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts'\r\nimport { GridItem } from './GridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    const { data:images , loading } = useFetchGifts(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p>Cargando...</p> }\r\n\r\n            <div className='card-grid'>\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GridItem key={img.id} {...img} />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <hr/>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGift } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGift(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 1000);\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GiftGrid } from './GiftGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['one punch man']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories,'Naruto']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Buscador de gifts</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( cat => (\r\n                        <GiftGrid key={cat} category={cat} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n    \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftExpertApp } from './components/GiftExpertApp';\n\nReactDOM.render(<GiftExpertApp />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}